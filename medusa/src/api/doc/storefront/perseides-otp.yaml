openapi: 3.0.0
info:
  title: PerseidesJS Auth-OTP API
  version: 1.0.0
  description: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –≤—Å–µ–º –º–µ—Ç–æ–¥–∞–º SMS OTP –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ PerseidesJS Auth-OTP
servers:
  - url: http://localhost:9000
    description: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  - url: https://api.ugodo.ru
    description: –ü—Ä–æ–¥–∞–∫—à–Ω API —Å–µ—Ä–≤–µ—Ä Ugodo
  - url: https://api.medusajs.com
    description: Demo Medusa —Å–µ—Ä–≤–µ—Ä
paths:
  /auth/customer/otp/generate:
    post:
      tags:
        - OTP Auth
      summary: Generate OTP for existing customer (login)
      description: Generates an OTP for an existing customer (login flow). Triggers event to send OTP to user.
      operationId: postAuthCustomerOtpGenerate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
                  description: Customer's phone number for receiving OTP
                  example: '+79991234567'
      responses:
        '200':
          description: OTP generated and event triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'OTP generated and event triggered'
        '400':
          description: Invalid request
        '404':
          description: Customer not found

  /auth/customer/otp/verify:
    post:
      tags:
        - OTP Auth
      summary: Verify OTP for existing customer
      description: Verifies the OTP for an existing customer (login flow).
      operationId: postAuthCustomerOtpVerify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: One-time password
                  example: '1234'
      responses:
        '200':
          description: OTP verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'registration-token-abc123'
        '400':
          description: Invalid OTP or identifier

  /auth/customer/otp/verify-test:
    post:
      tags:
        - OTP Auth (Test)
      summary: Verify OTP for existing customer (TEST MODE)
      description: |
        –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ OTP —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
        –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –ª—é–±–æ–π OTP –∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
        üö® –¢–û–õ–¨–ö–û –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø!
      operationId: postAuthCustomerOtpVerifyTest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: Any OTP code (test mode accepts any value)
                  example: '0000'
      responses:
        '200':
          description: OTP verified successfully (TEST MODE)
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'test-token-abc123'
                  test_mode:
                    type: boolean
                    example: true
        '400':
          description: Invalid request format

  /auth/customer/otp/pre-register:
    post:
      tags:
        - OTP Auth
      summary: Pre-register process for new customer
      description: Validates identifier for new customer and triggers OTP event (registration flow).
      operationId: postAuthCustomerOtpPreRegister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
                  description: Customer's phone number for receiving OTP
                  example: '+79991234567'
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'OTP sent successfully'
        '400':
          description: Invalid request
        '409':
          description: Actor already exists

  /auth/customer/otp/register:
    post:
      tags:
        - OTP Auth
      summary: Register new customer with OTP
      description: Registers a new customer using the OTP and returns a registration token.
      operationId: postAuthCustomerOtpRegister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: One-time password
                  example: '1234'
      responses:
        '200':
          description: Registration token issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'registration-token-abc123'
        '400':
          description: Invalid OTP or identifier

  /auth/customer/otp/register-test:
    post:
      tags:
        - OTP Auth (Test)
      summary: Register new customer with OTP (TEST MODE)
      description: |
        –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ —Å OTP.
        –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –ª—é–±–æ–π OTP –∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
        üö® –¢–û–õ–¨–ö–û –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø!
      operationId: postAuthCustomerOtpRegisterTest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: Any OTP code (test mode accepts any value)
                  example: '0000'
      responses:
        '200':
          description: Registration token issued (TEST MODE)
          content:
            application/json:
              schema:
                type: object
                properties:
                  registration_token:
                    type: string
                    example: 'test-registration-token-abc123'
                  test_mode:
                    type: boolean
                    example: true
        '400':
          description: Invalid request format

  /auth/customer/otp/authenticate:
    post:
      tags:
        - OTP Auth
      summary: Authenticate customer with OTP after registration
      description: Authenticates a customer using the OTP after registration and returns an access token.
      operationId: postAuthCustomerOtpAuthenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: One-time password
                  example: '1234'
      responses:
        '200':
          description: Access token issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: 'access-token-xyz456'
        '400':
          description: Invalid OTP or identifier

  /auth/customer/otp/authenticate-test:
    post:
      tags:
        - OTP Auth (Test)
      summary: Authenticate customer with OTP after registration (TEST MODE)
      description: |
        –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ —Å OTP –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
        –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –ª—é–±–æ–π OTP –∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
        üö® –¢–û–õ–¨–ö–û –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø!
      operationId: postAuthCustomerOtpAuthenticateTest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - otp
              properties:
                identifier:
                  type: string
                  description: Customer's phone number
                  example: '+79991234567'
                otp:
                  type: string
                  description: Any OTP code (test mode accepts any value)
                  example: '0000'
      responses:
        '200':
          description: Access token issued (TEST MODE)
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'test-access-token-xyz456'
                  test_mode:
                    type: boolean
                    example: true
        '400':
          description: Invalid request format

tags:
  - name: OTP Auth
    description: –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã SMS OTP –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ PerseidesJS
  - name: OTP Auth (Test)
    description: –¢–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã SMS OTP –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

components:
  schemas:
    OTPRequest:
      type: object
      required:
        - identifier
        - otp
      properties:
        identifier:
          type: string
          description: Customer's phone number in international format
          example: '+79991234567'
        otp:
          type: string
          description: One-time password code
          example: '1234'
    
    GenerateOTPRequest:
      type: object
      required:
        - identifier
      properties:
        identifier:
          type: string
          description: Customer's phone number in international format
          example: '+79991234567'
    
    OTPSuccessResponse:
      type: object
      properties:
        token:
          type: string
          description: Authentication or registration token
        test_mode:
          type: boolean
          description: Indicates if test mode is active
          
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error description
        code:
          type: string
          description: Error code 