#!/bin/bash

# üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã "divergent branches" –≤ Git
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./fix-git-divergent.sh [strategy]
# –°—Ç—Ä–∞—Ç–µ–≥–∏–∏: force, merge, rebase, stash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    error "–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

STRATEGY=${1:-auto}

log "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞—Å—Ö–æ–¥—è—â–∏–º–∏—Å—è –≤–µ—Ç–∫–∞–º–∏ Git"
log "–°—Ç—Ä–∞—Ç–µ–≥–∏—è: $STRATEGY"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
log "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Git:"
git status --short

echo ""
log "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
git log --oneline -5

echo ""

case $STRATEGY in
    force)
        warning "üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï (–≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!)"
        read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ origin/main..."
            git fetch origin main
            git reset --hard origin/main
            success "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        else
            log "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
            exit 0
        fi
        ;;
        
    merge)
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ merge –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        git config pull.rebase false
        if git pull origin main; then
            success "–£—Å–ø–µ—à–Ω—ã–π merge —Å —É–¥–∞–ª–µ–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π"
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ merge. –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è."
            git status
            exit 1
        fi
        ;;
        
    rebase)
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ rebase –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        git config pull.rebase true
        if git pull origin main; then
            success "–£—Å–ø–µ—à–Ω—ã–π rebase –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ç–∫—É"
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ rebase. –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è."
            git status
            exit 1
        fi
        ;;
        
    stash)
        log "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if git diff --quiet && git diff --cached --quiet; then
            log "–õ–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        else
            log "–°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
            git stash push -m "Auto-stash before pull $(date)"
            success "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ stash"
        fi
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
        git config pull.rebase false
        if git pull origin main; then
            success "–£—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if git stash list | grep -q "Auto-stash before pull"; then
                echo ""
                warning "–ù–∞–π–¥–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ stash"
                read -p "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/N): " -n 1 -r
                echo
                if [[ $REPLY =~ ^[Yy]$ ]]; then
                    if git stash pop; then
                        success "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
                    else
                        warning "–ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'git stash show' –∏ 'git stash apply' –≤—Ä—É—á–Ω—É—é"
                    fi
                fi
            fi
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏"
            exit 1
        fi
        ;;
        
    auto)
        log "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª—É—á—à–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if ! git diff --quiet || ! git diff --cached --quiet; then
            log "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º stash —Å—Ç—Ä–∞—Ç–µ–≥–∏—é"
            $0 stash
        else
            log "–õ–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π merge"
            if ! $0 merge 2>/dev/null; then
                warning "Merge –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
                $0 force
            fi
        fi
        ;;
        
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: $STRATEGY"
        echo ""
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:"
        echo "  force  - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø–æ—Ç–µ—Ä—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)"
        echo "  merge  - Merge —Å —É–¥–∞–ª–µ–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π"
        echo "  rebase - Rebase –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ç–∫—É"
        echo "  stash  - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ–±–Ω–æ–≤–∏—Ç—å—Å—è, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        echo "  auto   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä: ./fix-git-divergent.sh merge"
        exit 1
        ;;
esac

echo ""
log "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
git status --short

echo ""
success "üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å Git —Ä–µ—à–µ–Ω–∞!"
log "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $(git branch --show-current)"
log "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log --oneline -1)" 