version: '3.8'

services:
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: runner
  #   environment:
  #     - NODE_ENV=production
  #     - NEXT_PUBLIC_MEDUSA_BACKEND_URL=${MEDUSA_URL}
  #     - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
  #     - PORT=8000
  #   networks:
  #     - medusa-network
  #   depends_on:
  #     - backend
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: 1G
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"

  redis:
    image: redis:7.4.3
    container_name: ugodo_dev-redis-1
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: ugodo_dev-minio-1
    ports:
      - 9100:9000
      - 9101:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

networks:
  medusa-network:
    name: medusa-network

volumes:
  # postgres-data: # Том удален, так как сервис postgres удален
  redis-data:
  minio-data: 